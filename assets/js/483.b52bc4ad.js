(window.webpackJsonp=window.webpackJsonp||[]).push([[483],{811:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"setfacl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setfacl"}},[s._v("#")]),s._v(" setfacl")]),s._v(" "),t("p",[s._v("设置文件访问控制列表")]),s._v(" "),t("h2",{attrs:{id:"补充说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),t("p",[t("strong",[s._v("setfacl命令")]),s._v(" 是用来在命令行里设置ACL（访问控制列表）。在命令行里，一系列的命令跟随以一系列的文件名。")]),s._v(" "),t("h3",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-b,--remove-all：删除所有扩展的acl规则，基本的acl规则"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("所有者，群组，其他）将被保留。\n-k,--remove-default：删除缺省的acl规则。如果没有缺省规则，将不提示。\n-n，--no-mask：不要重新计算有效权限。setfacl默认会重新计算ACL mask，除非mask被明确的制定。\n--mask：重新计算有效权限，即使ACL mask被明确指定。\n-d，--default：设定默认的acl规则。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--restore")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("file：从文件恢复备份的acl规则（这些文件可由getfacl -R产生）。通过这种机制可以恢复整个目录树的acl规则。此参数不能和除--test以外的任何参数一同执行。\n--test：测试模式，不会改变任何文件的acl规则，操作后的acl规格将被列出。\n-R，--recursive：递归的对所有文件及目录进行操作。\n-L，--logical：跟踪符号链接，默认情况下只跟踪符号链接文件，跳过符号链接目录。\n-P，--physical：跳过所有符号链接，包括符号链接文件。\n--version：输出setfacl的版本号并退出。\n--help：输出帮助信息。\n--：标识命令行参数结束，其后的所有参数都将被认为是文件名\n-：如果文件名是-，则setfacl将从标准输入读取文件名。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ul",[t("li",[s._v("选项"),t("code",[s._v("-m")]),s._v("和"),t("code",[s._v("-x")]),s._v("后边跟以acl规则。多条acl规则以逗号(,)隔开。选项"),t("code",[s._v("-M")]),s._v("和"),t("code",[s._v("-X")]),s._v("用来从文件或标准输入读取acl规则。")]),s._v(" "),t("li",[s._v("选项"),t("code",[s._v("--set")]),s._v("和"),t("code",[s._v("--set-file")]),s._v("用来设置文件或目录的acl规则，先前的设定将被覆盖。")]),s._v(" "),t("li",[s._v("选项"),t("code",[s._v("-m(--modify)")]),s._v("和"),t("code",[s._v("-M(--modify-file)")]),s._v("选项修改文件或目录的acl规则。")]),s._v(" "),t("li",[s._v("选项"),t("code",[s._v("-x(--remove)")]),s._v("和"),t("code",[s._v("-X(--remove-file)")]),s._v("选项删除acl规则。")])]),s._v(" "),t("p",[s._v("当使用-M，-X选项从文件中读取规则时，setfacl接受getfacl命令输出的格式。每行至少一条规则，以#开始的行将被视为注释。")]),s._v(" "),t("p",[s._v("当在不支持ACLs的文件系统上使用setfacl命令时，setfacl将修改文件权限位。如果acl规则并不完全匹配文件权限位，setfacl将会修改文件权限位使其尽可能的反应acl规则，并会向standard error发送错误消息，以大于0的状态返回。")]),s._v(" "),t("p",[t("strong",[s._v("权限")])]),s._v(" "),t("p",[s._v("文件的所有者以及有"),t("code",[s._v("CAP_FOWNER")]),s._v("的用户进程可以设置一个文件的acl。（在目前的linux系统上，root用户是唯一有"),t("code",[s._v("CAP_FOWNER")]),s._v("能力的用户）")]),s._v(" "),t("p",[t("strong",[s._v("ACL规则")])]),s._v(" "),t("p",[s._v("setfacl命令可以识别以下的规则格式：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("efault"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ser"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("uid "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":perms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  指定用户的权限，文件所有者的权限（如果uid没有指定）。\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("efault"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("roup"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":gid "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":perms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   指定群组的权限，文件所有群组的权限（如果gid未指定）\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("efault"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":perms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     有效权限掩码\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("efault"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ther"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":perms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       其他的权限\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("恰当的acl规则被用在修改和设定的操作中，对于uid和gid，可以指定一个数字，也可指定一个名字。perms域是一个代表各种权限的字母的组合：读"),t("code",[s._v("-r")]),s._v("写"),t("code",[s._v("-w")]),s._v("执行"),t("code",[s._v("-x")]),s._v("，执行只适合目录和一些可执行的文件。pers域也可设置为八进制格式。")]),s._v(" "),t("p",[t("strong",[s._v("自动创建的规则")])]),s._v(" "),t("p",[s._v("最初的，文件目录仅包含3个基本的acl规则。为了使规则能正常执行，需要满足以下规则。")]),s._v(" "),t("ul",[t("li",[s._v("3个基本规则不能被删除。")]),s._v(" "),t("li",[s._v("任何一条包含指定的用户名或群组名的规则必须包含有效的权限组合。")]),s._v(" "),t("li",[s._v("任何一条包含缺省规则的规则在使用时，缺省规则必须存在。")])]),s._v(" "),t("p",[t("strong",[s._v("ACL的名词定义")])]),s._v(" "),t("p",[s._v("先来看看在ACL里面每一个名词的定义，这些名词我大多从man page上摘下来虽然有些枯燥,但是对于理解下面的内容还是很有帮助的。")]),s._v(" "),t("p",[s._v("ACL是由一系列的Access Entry所组成的，每一条Access Entry定义了特定的类别可以对文件拥有的操作权限。Access Entry有三个组成部分：Entry tag type, qualifier (optional), permission。")]),s._v(" "),t("p",[s._v("我们先来看一下最重要的Entry tag type，它有以下几个类型：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ACL_USER_OBJ：相当于Linux里file_owner的permission\nACL_USER：定义了额外的用户可以对此文件拥有的permission\nACL_GROUP_OBJ：相当于Linux里group的permission\nACL_GROUP：定义了额外的组可以对此文件拥有的permission\nACL_MASK：定义了ACL_USER, ACL_GROUP_OBJ和ACL_GROUP的最大权限 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("这个我下面还会专门讨论"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nACL_OTHER：相当于Linux里other的permission\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("让我们来据个例子说明一下，下面我们就用getfacl命令来查看一个定义好了的ACL文件：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl ./test.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file: test.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# owner: root")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# group: admin")]),s._v("\nuser::rw-\nuser:john:rw-\ngroup::rw-\ngroup:dev:r--\nmask::rw- other::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("前面三个以#开头的定义了文件名，file owner和group。这些信息没有太大的作用，接下来我们可以用"),t("code",[s._v("--omit-header")]),s._v("来省略掉。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("user::rw-       定义了ACL_USER_OBJ, 说明file owner拥有read and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" permission\nuser:john:rw-   定义了ACL_USER,这样用户john就拥有了对文件的读写权限,实现了我们一开始要达到的目的\ngroup::rw-      定义了ACL_GROUP_OBJ,说明文件的group拥有read and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" permission\ngroup:dev:r--   定义了ACL_GROUP,使得dev组拥有了对文件的read permission\nmask::rw-       定义了ACL_MASK的权限为read and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v("\nother::r--      定义了ACL_OTHER的权限为read\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("从这里我们就可以看出ACL提供了我们可以定义特定用户和用户组的功能，那么接下来我们就来看一下如何设置一个文件的ACL：")]),s._v(" "),t("p",[t("strong",[s._v("如何设置ACL文件")])]),s._v(" "),t("p",[s._v("首先我们还是要讲一下设置ACL文件的格式，从上面的例子中我们可以看到每一个Access Entry都是由三个被：号分隔开的字段所组成，第一个就是Entry tag type。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("user   对应了ACL_USER_OBJ和ACL_USER\ngroup  对应了ACL_GROUP_OBJ和ACL_GROUP\nmask   对应了ACL_MASK\nother  对应了ACL_OTHER\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("第二个字段称之为qualifier，也就是上面例子中的john和dev组，它定义了特定用户和拥护组对于文件的权限。这里我们也可以发现只有user和group才有qualifier，其他的都为空。第三个字段就是我们熟悉的permission了。它和Linux的permission一样定义，这里就不多讲了。")]),s._v(" "),t("p",[s._v("下面我们就来看一下怎么设置test.txt这个文件的ACL让它来达到我们上面的要求。")]),s._v(" "),t("p",[s._v("一开始文件没有ACL的额外属性：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l")]),s._v("\n-rw-rw-r-- "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":06 test.txt\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./test.txt")]),s._v("\nuser::rw- group::rw- other::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("我们先让用户john拥有对test.txt文件的读写权限：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setfacl -m user:john:rw- ./test.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./test.txt")]),s._v("\nuser::rw-\nuser:john:rw-\ngroup::rw-\nmask::rw-\nother::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这时我们就可以看到john用户在ACL里面已经拥有了对文件的读写权。这个时候如果我们查看一下linux的permission我们还会发现一个不一样的地方。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l ./test.txt")]),s._v("\n-rw-rw-r--+ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":06 ./test.txt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在文件permission的最后多了一个+号，当任何一个文件拥有了ACL_USER或者ACL_GROUP的值以后我们就可以称它为ACL文件，这个+号就是用来提示我们的。我们还可以发现当一个文件拥有了"),t("code",[s._v("ACL_USER")]),s._v("或者"),t("code",[s._v("ACL_GROUP")]),s._v("的值时"),t("code",[s._v("ACL_MASK")]),s._v("同时也会被定义。")]),s._v(" "),t("p",[s._v("接下来我们来设置dev组拥有read permission：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setfacl -m group:dev:r-- ./test.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./test.txt")]),s._v("\nuser::rw-\nuser:john:rw-\ngroup::rw-\ngroup:dev:r--\nmask::rw-\nother::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("到这里就完成了我们上面讲到的要求，是不是很简单呢。")]),s._v(" "),t("p",[t("strong",[s._v("ACL_MASK和Effective permission")])]),s._v(" "),t("p",[s._v("这里需要重点讲一下"),t("code",[s._v("ACL_MASK")]),s._v("，因为这是掌握ACL的另一个关键，在Linux file permission里面大家都知道比如对于"),t("code",[s._v("rw-rw-r--")]),s._v("来说, 当中的那个"),t("code",[s._v("rw-")]),s._v("是指文件组的permission. 但是在ACL里面这种情况只是在"),t("code",[s._v("ACL_MASK")]),s._v("不存在的情况下成立。如果文件有ACL_MASK值，那么当中那个"),t("code",[s._v("rw-")]),s._v("代表的就是mask值而不再是group permission了。")]),s._v(" "),t("p",[s._v("让我们来看下面这个例子：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l")]),s._v("\n-rwxrw-r-- "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":10 test.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这里说明test.sh文件只有file owner: root拥有read, write, execute/search permission。admin组只有read and write permission，现在我们想让用户john也对test.sh具有和root一样的permission。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setfacl -m user:john:rwx ./test.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./test.sh")]),s._v("\nuser::rwx user:john:rwx\ngroup::rw-\nmask::rwx\nother::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("这里我们看到john已经拥有了rwx的permission，mask值也被设定为rwx，那是因为它规定了"),t("code",[s._v("ACL_USER")]),s._v("，"),t("code",[s._v("ACL_GROUP")]),s._v("和"),t("code",[s._v("ACL_GROUP_OBJ")]),s._v("的最大值，现在我们再来看test.sh的Linux permission，它已经变成了：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l")]),s._v("\n-rwxrwxr--+ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":10 test.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("那么如果现在admin组的用户想要执行test.sh的程序会发生什么情况呢？它会被permission deny。原因在于实际上admin组的用户只有read and write permission，这里当中显示的rwx是"),t("code",[s._v("ACL_MASK")]),s._v("的值而不是group的permission。")]),s._v(" "),t("p",[s._v("所以从这里我们就可以知道，如果一个文件后面有+标记，我们都需要用getfacl来确认它的permission，以免发生混淆。")]),s._v(" "),t("p",[s._v("下面我们再来继续看一个例子，假如现在我们设置test.sh的mask为read only，那么admin组的用户还会有write permission吗？")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setfacl -m mask::r-- ./test.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./test.sh")]),s._v("\nuser::rwx\nuser:john:rwx   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#effective:r--")]),s._v("\ngroup::rw-      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#effective:r--")]),s._v("\nmask::r--\nother::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这时候我们可以看到ACL_USER和ACL_GROUP_OBJ旁边多了个#effective:r--，这是什么意思呢？让我们再来回顾一下"),t("code",[s._v("ACL_MASK")]),s._v("的定义。它规定了"),t("code",[s._v("ACL_USER")]),s._v("，"),t("code",[s._v("ACL_GROUP_OBJ")]),s._v("和"),t("code",[s._v("ACL_GROUP")]),s._v("的最大权限。那么在我们这个例子中他们的最大权限也就是read only。虽然我们这里给"),t("code",[s._v("ACL_USER")]),s._v("和"),t("code",[s._v("ACL_GROUP_OBJ")]),s._v("设置了其他权限，但是他们真正有效果的只有read权限。")]),s._v(" "),t("p",[s._v("这时我们再来查看test.sh的Linux file permission时它的group permission也会显示其mask的值(i.e. r--)")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l")]),s._v("\n-rwxr--r--+ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":10 test.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("Default ACL")])]),s._v(" "),t("p",[s._v("上面我们所有讲的都是Access ACL，也就是对文件而言。下面我简单讲一下Default ACL。Default ACL是指对于一个目录进行Default ACL设置，并且在此目录下建立的文件都将继承此目录的ACL。")]),s._v(" "),t("p",[s._v("同样我们来做一个试验说明，比如现在root用户建立了一个dir目录：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mkdir dir")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("他希望所有在此目录下建立的文件都可以被john用户所访问，那么我们就应该对dir目录设置Default ACL。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setfacl -d -m user:john:rw ./dir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./dir")]),s._v("\nuser::rwx\ngroup::rwx\nother::r-x\ndefault:user::rwx\ndefault:user:john:rwx\ndefault:group::rwx\ndefault:mask::rwx\ndefault: other::r-x\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("这里我们可以看到ACL定义了default选项，john用户拥有了default的read, write, excute/search permission。所有没有定义的default都将从file permission里copy过来，现在root用户在dir下建立一个test.txt文件。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# touch ./dir/test.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l ./dir/test.txt")]),s._v("\n-rw-rw-r--+ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":46 ./dir/test.txt\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# getfacl --omit-header ./dir/test.txt")]),s._v("\nuser::rw-\nuser:john:rw-\ngroup::rwx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#effective:rw-")]),s._v("\nmask::rw-\nother::r--\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("这里我们看到在dir下建立的文件john用户自动就有了read and write permission，")]),s._v(" "),t("p",[t("strong",[s._v("ACL相关命令")])]),s._v(" "),t("p",[s._v("前面的例子中我们都注意到了getfacl命令是用来读取文件的ACL，setfacl是用来设定文件的Acess ACL。这里还有一个chacl是用来改变文件和目录的Access ACL and Default ACL，它的具体参数大家可以去看man page。我只想提及一下"),t("code",[s._v("chacl -B")]),s._v("。它可以彻底删除文件或者目录的ACL属性(包括Default ACL)，比如你即使用了"),t("code",[s._v("setfacl -x")]),s._v("删除了所有文件的ACL属性，那个+号还是会出现在文件的末尾，所以正确的删除方法应该是用"),t("code",[s._v("chacl -B")]),s._v("用cp来复制文件的时候我们现在可以加上"),t("code",[s._v("-p")]),s._v("选项。这样在拷贝文件的时候也将拷贝文件的ACL属性，对于不能拷贝的ACL属性将给出警告。")]),s._v(" "),t("p",[s._v("mv命令将会默认地移动文件的ACL属性，同样如果操作不允许的情况下会给出警告。")]),s._v(" "),t("p",[t("strong",[s._v("需要注意的几点")])]),s._v(" "),t("p",[s._v("如果你的文件系统不支持ACL的话，你也许需要重新mount你的file system：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" remount, acl "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mount point"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果用chmod命令改变Linux file permission的时候相应的ACL值也会改变，反之改变ACL的值，相应的file permission也会改变。")])])}),[],!1,null,null,null);t.default=e.exports}}]);