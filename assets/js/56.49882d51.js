(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{388:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" awk")]),s._v(" "),a("p",[s._v("文本和数据进行处理的编程语言")]),s._v(" "),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),a("p",[a("strong",[s._v("awk")]),s._v(" 是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势。")]),s._v(" "),a("h2",{attrs:{id:"awk命令格式和选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk命令格式和选项"}},[s._v("#")]),s._v(" awk命令格式和选项")]),s._v(" "),a("p",[a("strong",[s._v("语法形式")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'script'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" scriptfile "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("常用命令选项")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("-F fs")]),s._v(" fs指定输入分隔符，fs可以是字符串或正则表达式，如-F:，默认的分隔符是连续的空格或制表符")]),s._v(" "),a("li",[a("strong",[s._v("-v var=value")]),s._v(" 赋值一个用户定义变量，将外部变量传递给awk")]),s._v(" "),a("li",[a("strong",[s._v("-f scripfile")]),s._v(" 从脚本文件中读取awk命令")]),s._v(" "),a("li",[a("strong",[s._v("-m[fr] val")]),s._v(" 对val值设置内在限制，-mf选项限制分配给val的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。")])]),s._v(" "),a("h2",{attrs:{id:"awk模式和操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk模式和操作"}},[s._v("#")]),s._v(" awk模式和操作")]),s._v(" "),a("p",[s._v("awk脚本是由模式和操作组成的。")]),s._v(" "),a("h3",{attrs:{id:"模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[s._v("#")]),s._v(" 模式")]),s._v(" "),a("p",[s._v("模式可以是以下任意一个：")]),s._v(" "),a("ul",[a("li",[s._v("/正则表达式/：使用通配符的扩展集。")]),s._v(" "),a("li",[s._v("关系表达式：使用运算符进行操作，可以是字符串或数字的比较测试。")]),s._v(" "),a("li",[s._v("模式匹配表达式：用运算符"),a("code",[s._v("~")]),s._v("（匹配）和"),a("code",[s._v("!~")]),s._v("（不匹配）。")]),s._v(" "),a("li",[s._v("BEGIN语句块、pattern语句块、END语句块：参见awk的工作原理")])]),s._v(" "),a("h3",{attrs:{id:"操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[s._v("#")]),s._v(" 操作")]),s._v(" "),a("p",[s._v("操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：")]),s._v(" "),a("ul",[a("li",[s._v("变量或数组赋值")]),s._v(" "),a("li",[s._v("输出命令")]),s._v(" "),a("li",[s._v("内置函数")]),s._v(" "),a("li",[s._v("控制流语句")])]),s._v(" "),a("h2",{attrs:{id:"awk脚本基本结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk脚本基本结构"}},[s._v("#")]),s._v(" awk脚本基本结构")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{ print "start" } pattern{ commands } END{ print "end" }\'')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("一个awk脚本通常由：BEGIN语句块、能够使用模式匹配的通用语句块、END语句块3部分组成，这三个部分是可选的。任意一个部分都可以不出现在脚本中，脚本通常是被 "),a("strong",[s._v("单引号")]),s._v(" 中，例如：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ i=0 } { i++ } END{ print i }'")]),s._v(" filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"awk的工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk的工作原理"}},[s._v("#")]),s._v(" awk的工作原理")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ commands } pattern{ commands } END{ commands }'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("第一步：执行"),a("code",[s._v("BEGIN{ commands }")]),s._v("语句块中的语句；")]),s._v(" "),a("li",[s._v("第二步：从文件或标准输入(stdin)读取一行，然后执行"),a("code",[s._v("pattern{ commands }")]),s._v("语句块，它逐行扫描文件，从第一行到最后一行重复这个过程，直到文件全部被读取完毕。")]),s._v(" "),a("li",[s._v("第三步：当读至输入流末尾时，执行"),a("code",[s._v("END{ commands }")]),s._v("语句块。")])]),s._v(" "),a("p",[a("strong",[s._v("BEGIN语句块")]),s._v(" 在awk开始从输入流中读取行 "),a("strong",[s._v("之前")]),s._v(" 被执行，这是一个可选的语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在BEGIN语句块中。")]),s._v(" "),a("p",[a("strong",[s._v("END语句块")]),s._v(" 在awk从输入流中读取完所有的行 "),a("strong",[s._v("之后")]),s._v(" 即被执行，比如打印所有行的分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块。")]),s._v(" "),a("p",[a("strong",[s._v("pattern语句块")]),s._v(" 中的通用命令是最重要的部分，它也是可选的。如果没有提供pattern语句块，则默认执行"),a("code",[s._v("{ print }")]),s._v("，即打印每一个读取到的行，awk读取的每一行都会执行该语句块。")]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A line 1'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('A line 2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{ print "Start" } { print } END{ print "End" }\'')]),s._v("\nStart\nA line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nA line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nEnd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("当使用不带参数的"),a("code",[s._v("print")]),s._v("时，它就打印当前行，当"),a("code",[s._v("print")]),s._v("的参数是以逗号进行分隔时，打印时则以空格作为定界符。在awk的print语句块中双引号是被当作拼接符使用，例如：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{ var1="v1"; var2="v2"; var3="v3"; print var1,var2,var3; }\'')]),s._v(" \nv1 v2 v3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("双引号拼接使用：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{ var1="v1"; var2="v2"; var3="v3"; print var1"="var2"="var3; }\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("{ }类似一个循环体，会对文件中的每一行进行迭代，通常变量初始化语句（如：i=0）以及打印文件头部的语句放入BEGIN语句块中，将打印的结果等语句放在END语句块中。")]),s._v(" "),a("h2",{attrs:{id:"awk内置变量-预定义变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk内置变量-预定义变量"}},[s._v("#")]),s._v(" awk内置变量（预定义变量）")]),s._v(" "),a("p",[s._v("说明：[A][N][P][G]表示第一个支持变量的工具，[A]=awk、[N]=nawk、[P]=POSIXawk、[G]=gawk")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v(" **"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$n")]),s._v("**  当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。 \n **"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("**  这个变量包含执行过程中当前行的文本内容。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ARGC**  命令行参数的数目。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ARGIND**  命令行中当前文件的位置（从0开始算）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ARGV**  包含命令行参数的数组。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **CONVFMT**  数字转换格式（默认值为%.6g）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ENVIRON**  环境变量关联数组。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ERRNO**  最后一个系统错误的描述。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **FIELDWIDTHS**  字段宽度列表（用空格键分隔）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **FILENAME**  当前输入文件的名。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **FNR**  同NR，但相对于当前文件。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **FS**  字段分隔符（默认是任何空格）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **IGNORECASE**  如果为真，则进行忽略大小写的匹配。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **NF**  表示字段数，在执行过程中对应于当前的字段数。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **NR**  表示记录数，在执行过程中对应于当前的行号。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **OFMT**  数字的输出格式（默认值是%.6g）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **OFS**  输出字段分隔符（默认值是一个空格）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **ORS**  输出记录分隔符（默认值是一个换行符）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **RS**  记录分隔符（默认是一个换行符）。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **RSTART**  由match函数所匹配的字符串的第一个位置。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **RLENGTH**  由match函数所匹配的字符串的长度。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  **SUBSEP**  数组下标分隔符（默认值是34）。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("转义序列")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\\\\ \\自身\n\\$ 转义$\n\\t 制表符\n\\b 退格符\n\\r 回车符\n\\n 换行符\n\\c 取消换行\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1 f2 f3'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("line2 f4 f5"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('line3 f6 f7"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{print "Line No:"NR", No of fields:"NF, "$0="$0, "$1="$1, "$2="$2, "$3="$3}\'')]),s._v(" \nLine No:1, No of fields:3 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line1 f2 f3 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line1 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f2 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f3\nLine No:2, No of fields:3 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line2 f4 f5 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line2 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f4 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f5\nLine No:3, No of fields:3 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line3 f6 f7 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("line3 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f6 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("使用"),a("code",[s._v("print $NF")]),s._v("可以打印出一行中的最后一个字段，使用"),a("code",[s._v("$(NF-1)")]),s._v("则是打印倒数第二个字段，其他以此类推：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1 f2 f3'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v(' line2 f4 f5"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v("\nf3\nf5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1 f2 f3'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v(' line2 f4 f5"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $(NF-1)}'")]),s._v("\nf2\nf4\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("打印每一行的第二和第三个字段：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $2,$3 }'")]),s._v(" filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("统计文件中的行数：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'END{ print NR }'")]),s._v(" filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("以上命令只使用了END语句块，在读入每一行的时，awk会将NR更新为对应的行号，当到达最后一行NR的值就是最后一行的行号，所以END语句块中的NR就是文件的行数。")]),s._v(" "),a("p",[s._v("一个每一行中第一个字段值累加的例子：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{ sum=0; print "总和：" } { print $1"+"; sum+=$1 } END{ print "等于"; print sum }\'')]),s._v(" \n总和：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("+\n等于\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"将外部变量值传递给awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将外部变量值传递给awk"}},[s._v("#")]),s._v(" 将外部变量值传递给awk")]),s._v(" "),a("p",[s._v("借助 "),a("strong",[a("code",[s._v("-v")]),s._v("选项")]),s._v(" ，可以将外部值（并非来自stdin）传递给awk：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VARIABLE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print VARIABLE }'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("另一种传递外部变量方法：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bbb"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print v1,v2 }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当输入来自于文件时使用：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print v1,v2 }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var2")]),s._v(" filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("以上方法中，变量之间用空格分隔作为awk的命令行参数跟随在BEGIN、{}和END语句块之后。")]),s._v(" "),a("h2",{attrs:{id:"查找进程pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找进程pid"}},[s._v("#")]),s._v(" 查找进程pid")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-antup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7770")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $NF NR}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $1}'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"awk运算与判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk运算与判断"}},[s._v("#")]),s._v(" awk运算与判断")]),s._v(" "),a("p",[s._v("作为一种程序设计语言所应具有的特点之一，awk支持多种运算，这些运算与C语言提供的基本相同。awk还提供了一系列内置的运算函数（如log、sqr、cos、sin等）和一些用于对字符串进行操作（运算）的函数（如length、substr等等）。这些函数的引用大大的提高了awk的运算功能。作为对条件转移指令的一部分，关系判断是每种程序设计语言都具备的功能，awk也不例外，awk中允许进行多种测试，作为样式匹配，还提供了模式匹配表达式~（匹配）和!~（不匹配）。作为对测试的一种扩充，awk也支持用逻辑运算符。")]),s._v(" "),a("h3",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("+ -")]),s._v(" "),a("td",[s._v("加，减")])]),s._v(" "),a("tr",[a("td",[s._v("* / &")]),s._v(" "),a("td",[s._v("乘，除与求余")])]),s._v(" "),a("tr",[a("td",[s._v("+ - !")]),s._v(" "),a("td",[s._v("一元加，减和逻辑非")])]),s._v(" "),a("tr",[a("td",[s._v("^ ***")]),s._v(" "),a("td",[s._v("求幂")])]),s._v(" "),a("tr",[a("td",[s._v("++ --")]),s._v(" "),a("td",[s._v("增加或减少，作为前缀或后缀")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{a=\"b\";print a++,++a;}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注意：所有用作算术运算符进行操作，操作数自动转为数值，所有非数值都变为0")]),s._v(" "),a("h3",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("= += -= *= /= %= ^= **=")]),s._v(" "),a("td",[s._v("赋值语句")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 等价于：a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("a+5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 其它同类\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("\\|\\|")])]),s._v(" "),a("td",[s._v("逻辑或")])]),s._v(" "),a("tr",[a("td",[s._v("&&")]),s._v(" "),a("td",[s._v("逻辑与")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{a=1;b=2;print (a>5 && b<=2),(a>5 || b<=2);}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"正则运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则运算符"}},[s._v("#")]),s._v(" 正则运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("~ !~")]),s._v(" "),a("td",[s._v("匹配正则表达式和不匹配正则表达式")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("^ 行首\n$ 行尾\n. 除了换行符以外的任意单个字符\n* 前导字符的零个或多个\n.* 所有字符\n[] 字符组内的任一字符\n[^]对字符组内的每个字符取反(不匹配字符组内的每个字符)\n^[^] 非字符组内的字符开头的行\n[a-z] 小写字母\n[A-Z] 大写字母\n[a-Z] 小写和大写字母\n[0-9] 数字\n\\< 单词头单词一般以空格或特殊字符做分隔,连续的字符串被当做单词\n\\> 单词尾\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("blockquote",[a("p",[s._v("正则需要用 /正则/ 包围住")])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{a="100testa";if(a ~ /^100*/){print "ok";}}\'')]),s._v("\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[s._v("#")]),s._v(" 关系运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("< <= > >= != ==")]),s._v(" "),a("td",[s._v("关系运算符")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{a=11;if(a >= 9){print \"ok\";}}'")]),s._v("\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注意：> < 可以作为字符串比较，也可以用作数值比较，关键看操作数如果是字符串就会转换为字符串比较。两个都为数字才转为数值比较。字符串比较：按照ASCII码顺序比较。")]),s._v(" "),a("h3",{attrs:{id:"其它运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它运算符"}},[s._v("#")]),s._v(" 其它运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("$")]),s._v(" "),a("td",[s._v("字段引用")])]),s._v(" "),a("tr",[a("td",[s._v("空格")]),s._v(" "),a("td",[s._v("字符串连接符")])]),s._v(" "),a("tr",[a("td",[s._v("?:")]),s._v(" "),a("td",[s._v("C条件表达式")])]),s._v(" "),a("tr",[a("td",[s._v("in")]),s._v(" "),a("td",[s._v("数组中是否存在某键值")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{a="b";print a=="b"?"ok":"err";}\'')]),s._v("\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{a="b";arr[0]="b";arr[1]="c";print (a in arr);}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('awk \'BEGIN{a="b";arr[0]="b";arr["b"]="c";print (a in arr);}\'\n1\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"运算级优先级表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算级优先级表"}},[s._v("#")]),s._v(" 运算级优先级表")]),s._v(" "),a("p",[s._v("!级别越高越优先"),a("br"),s._v("\n级别越高越优先")]),s._v(" "),a("h2",{attrs:{id:"awk高级输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk高级输入输出"}},[s._v("#")]),s._v(" awk高级输入输出")]),s._v(" "),a("h3",{attrs:{id:"读取下一条记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取下一条记录"}},[s._v("#")]),s._v(" 读取下一条记录")]),s._v(" "),a("p",[s._v("awk中"),a("code",[s._v("next")]),s._v("语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。next语句一般用于多行合并：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" text.txt\na\nb\nc\nd\ne\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR%2==1{next}{print NR,$0;}'")]),s._v(" text.txt\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" b\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("当记录行号除以2余1，就跳过当前行。下面的"),a("code",[s._v("print NR,$0")]),s._v("也不会执行。下一行开始，程序有开始判断"),a("code",[s._v("NR%2")]),s._v("值。这个时候记录行号是"),a("code",[s._v("：2")]),s._v(" ，就会执行下面语句块："),a("code",[s._v("'print NR,$0'")])]),s._v(" "),a("p",[s._v("分析发现需要将包含有“web”行进行跳过，然后需要将内容与下面行合并为一行：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" text.txt\nweb01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nhttpd            ok\ntomcat               ok\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sendmail")]),s._v("               ok\nweb02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.101"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nhttpd            ok\npostfix               ok\nweb03"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.102"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmysqld            ok\nhttpd               ok\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^web/{T=$0;next;}{print T\":\"t,$0;}'")]),s._v(" text.txt\nweb01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   httpd            ok\nweb01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   tomcat               ok\nweb01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sendmail")]),s._v("               ok\nweb02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.101"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   httpd            ok\nweb02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.101"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   postfix               ok\nweb03"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.102"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   mysqld            ok\nweb03"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.102"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":   httpd               ok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"简单地读取一条记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单地读取一条记录"}},[s._v("#")]),s._v(" 简单地读取一条记录")]),s._v(" "),a("p",[a("code",[s._v("awk getline")]),s._v("用法：输出重定向需用到"),a("code",[s._v("getline函数")]),s._v("。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。")]),s._v(" "),a("p",[s._v("getline语法：getline var，变量var包含了特定行的内容。")]),s._v(" "),a("p",[s._v("awk getline从整体上来说，用法说明：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("当其左右无重定向符"),a("code",[s._v("|")]),s._v("或"),a("code",[s._v("<")]),s._v("时：")]),s._v(" getline作用于当前文件，读入当前文件的第一行给其后跟的变量"),a("code",[s._v("var")]),s._v("或"),a("code",[s._v("$0")]),s._v("（无变量），应该注意到，由于awk在处理getline之前已经读入了一行，所以getline得到的返回结果是隔行的。")]),s._v(" "),a("li",[a("strong",[s._v("当其左右有重定向符"),a("code",[s._v("|")]),s._v("或"),a("code",[s._v("<")]),s._v("时：")]),s._v(" getline则作用于定向输入文件，由于该文件是刚打开，并没有被awk读入一行，只是getline读入，那么getline返回的是该文件的第一行，而不是隔行。")])]),s._v(" "),a("p",[a("strong",[s._v("示例：")])]),s._v(" "),a("p",[s._v("执行linux的"),a("code",[s._v("date")]),s._v("命令，并通过管道输出给"),a("code",[s._v("getline")]),s._v("，然后再把输出赋值给自定义变量out，并打印它：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ \"date\" | getline out; print out }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行shell的date命令，并通过管道输出给getline，然后getline从管道中读取并将输入赋值给out，split函数把变量out转化成数组mon，然后打印数组mon的第二个元素：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ \"date\" | getline out; split(out,mon); print mon[2] }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("命令ls的输出传递给geline作为输入，循环使getline从ls的输出中读取一行，并把它打印到屏幕。这里没有输入文件，因为BEGIN块在打开输入文件前执行，所以可以忽略输入文件。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ while( \"ls\" | getline) print }'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"关闭文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭文件"}},[s._v("#")]),s._v(" 关闭文件")]),s._v(" "),a("p",[s._v("awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"filename"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("filename可以是getline打开的文件，也可以是stdin，包含文件名的变量或者getline使用的确切命令。或一个输出文件，可以是stdout，包含文件名的变量或使用管道的确切命令。")]),s._v(" "),a("h3",{attrs:{id:"输出到一个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出到一个文件"}},[s._v("#")]),s._v(" 输出到一个文件")]),s._v(" "),a("p",[s._v("awk中允许用如下方式将结果输出到一个文件：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{printf("hello word!n") > "datafile"}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{printf("hello word!n") >> "datafile"}\'')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"设置字段定界符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置字段定界符"}},[s._v("#")]),s._v(" 设置字段定界符")]),s._v(" "),a("p",[s._v("默认的字段定界符是空格，可以使用"),a("code",[s._v('-F "定界符"')]),s._v("  明确指定一个定界符：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $NF }'")]),s._v(" /etc/passwd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ FS=\":\" } { print $NF }'")]),s._v(" /etc/passwd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在"),a("code",[s._v("BEGIN语句块")]),s._v("中则可以用"),a("code",[s._v("OFS=“定界符”")]),s._v("设置输出字段的定界符。")]),s._v(" "),a("h2",{attrs:{id:"流程控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制语句"}},[s._v("#")]),s._v(" 流程控制语句")]),s._v(" "),a("p",[s._v("在linux awk的while、do-while和for语句中允许使用break,continue语句来控制流程走向，也允许使用exit这样的语句来退出。break中断当前正在执行的循环并跳到循环外执行下一条语句。if 是流程选择用法。awk中，流程控制语句，语法结构，与c语言类型。有了这些语句，其实很多shell程序都可以交给awk，而且性能是非常快的。下面是各个语句用法。")]),s._v(" "),a("h3",{attrs:{id:"条件判断语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件判断语句"}},[s._v("#")]),s._v(" 条件判断语句")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  语句1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  语句2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("格式中语句1可以是多个语句，为了方便判断和阅读，最好将多个语句用{}括起来。awk分枝结构允许嵌套，其格式为：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{\ntest=100;\nif(test>90){\n  print "very good";\n  }\n  else if(test>60){\n    print "good";\n  }\n  else{\n    print "no pass";\n  }\n}\'')]),s._v("\n\nvery good\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("每条命令语句后面可以用"),a("code",[s._v(";")]),s._v(" "),a("strong",[s._v("分号")]),s._v(" 结尾。")]),s._v(" "),a("h3",{attrs:{id:"循环语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[s._v("#")]),s._v(" 循环语句")]),s._v(" "),a("h3",{attrs:{id:"while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[s._v("#")]),s._v(" # while语句")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("while"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{\ntest=100;\ntotal=0;\nwhile(i<=test){\n  total+=i;\n  i++;\n}\nprint total;\n}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5050")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[s._v("#")]),s._v(" # for循环")]),s._v(" "),a("p",[s._v("for循环有两种格式：")]),s._v(" "),a("p",[s._v("格式1：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("for"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("变量 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{\nfor(k in ENVIRON){\n  print k\"=\"ENVIRON[k];\n}\n\n}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("TERM")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("G_BROKEN_FILENAMES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("SHLVL")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pwd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/text\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SSH_CLIENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.21 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("53087")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("注：ENVIRON是awk常量，是子典型数组。")]),s._v(" "),a("p",[s._v("格式2：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("for"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{\ntotal=0;\nfor(i=0;i<=100;i++){\n  total+=i;\n}\nprint total;\n}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5050")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"do循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do循环"}},[s._v("#")]),s._v(" # do循环")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" while"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("例子：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{ \ntotal=0;\ni=0;\ndo {total+=i;i++;} while(i<=100)\n  print total;\n}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5050")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"其他语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他语句"}},[s._v("#")]),s._v(" 其他语句")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("break")]),s._v("  当 break 语句用于 while 或 for 语句时，导致退出程序循环。")]),s._v(" "),a("li",[a("strong",[s._v("continue")]),s._v("  当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。")]),s._v(" "),a("li",[a("strong",[s._v("next")]),s._v("  能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。")]),s._v(" "),a("li",[a("strong",[s._v("exit")]),s._v("  语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。")])]),s._v(" "),a("h2",{attrs:{id:"数组应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组应用"}},[s._v("#")]),s._v(" 数组应用")]),s._v(" "),a("p",[s._v("数组是awk的灵魂，处理文本中最不能少的就是它的数组处理。因为数组索引（下标）可以是数字和字符串在awk中数组叫做关联数组(associative arrays)。awk 中的数组不必提前声明，也不必声明大小。数组元素用0或空字符串来初始化，这根据上下文而定。")]),s._v(" "),a("h3",{attrs:{id:"数组的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的定义"}},[s._v("#")]),s._v(" 数组的定义")]),s._v(" "),a("p",[s._v("数字做数组索引（下标）：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sun"')]),s._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kai"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("字符串做数组索引（下标）：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"www"')]),s._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"birth"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1987"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("使用中"),a("code",[s._v("print Array[1]")]),s._v("会打印出sun；使用"),a("code",[s._v("print Array[2]")]),s._v("会打印出kai；使用"),a("code",[s._v('print["birth"]')]),s._v("会得到1987。")]),s._v(" "),a("p",[a("strong",[s._v("读取数组的值")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" for"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出的顺序是随机的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" for"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i++"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Len是数组的长度")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"数组相关函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组相关函数"}},[s._v("#")]),s._v(" 数组相关函数")]),s._v(" "),a("p",[a("strong",[s._v("得到数组长度：")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="it is a test";lens=split(info,tA," ");print length(tA),lens;}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("length返回字符串以及数组长度，split进行分割字符串为数组，也会返回分割得到数组长度。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="it is a test";split(info,tA," ");print asort(tA);}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("asort对数组进行排序，返回数组长度。")]),s._v(" "),a("p",[a("strong",[s._v("输出数组内容（无序，有序输出）：")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="it is a test";split(info,tA," ");for(k in tA){print k,tA[k];}}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" it\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" is\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" a \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("for…in")]),s._v("输出，因为数组是关联数组，默认是无序的。所以通过"),a("code",[s._v("for…in")]),s._v("得到是无序的数组。如果需要得到有序数组，需要通过下标获得。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="it is a test";tlen=split(info,tA," ");for(k=1;k<=tlen;k++){print k,tA[k];}}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" it\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" is\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" a\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("注意：数组下标是从1开始，与C数组不一样。")]),s._v(" "),a("p",[a("strong",[s._v("判断键值存在以及删除键值：")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误的判断方法：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{tB["a"]="a1";tB["b"]="b1";if(tB["c"]!="1"){print "no found";};for(k in tB){print k,tB[k];}}\'')]),s._v(" \nno found\na a1\nb b1\nc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("以上出现奇怪问题，"),a("code",[s._v("tB[“c”]")]),s._v("没有定义，但是循环时候，发现已经存在该键值，它的值为空，这里需要注意，awk数组是关联数组，只要通过数组引用它的key，就会自动创建改序列。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 正确判断方法：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{tB["a"]="a1";tB["b"]="b1";if( "c" in tB){print "ok";};for(k in tB){print k,tB[k];}}\'')]),s._v("  \na a1\nb b1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("code",[s._v("if(key in array)")]),s._v("通过这种方法判断数组中是否包含"),a("code",[s._v("key")]),s._v("键值。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除键值：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{tB["a"]="a1";tB["b"]="b1";delete tB["a"];for(k in tB){print k,tB[k];}}\'')]),s._v("                     \nb b1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("delete array[key]")]),s._v("可以删除，对应数组"),a("code",[s._v("key")]),s._v("的，序列值。")]),s._v(" "),a("h3",{attrs:{id:"二维、多维数组使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维、多维数组使用"}},[s._v("#")]),s._v(" 二维、多维数组使用")]),s._v(" "),a("p",[s._v("awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，"),a("code",[s._v("array[2,4]=1")]),s._v("这样的访问是允许的。awk使用一个特殊的字符串"),a("code",[s._v("SUBSEP(\\034)")]),s._v("作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2\\0344。")]),s._v(" "),a("p",[s._v("类似一维数组的成员测试，多维数组可以使用"),a("code",[s._v("if ( (i,j) in array)")]),s._v("这样的语法，但是下标必须放置在圆括号中。类似一维数组的循环访问，多维数组使用"),a("code",[s._v("for ( item in array )")]),s._v("这样的语法遍历数组。与一维数组不同的是，多维数组必须使用"),a("code",[s._v("split()")]),s._v("函数来访问单独的下标分量。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{\nfor(i=1;i<=9;i++){\n  for(j=1;j<=9;j++){\n    tarr[i,j]=i*j; print i,"*",j,"=",tarr[i,j];\n  }\n}\n}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("81")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("可以通过"),a("code",[s._v("array[k,k2]")]),s._v("引用获得数组内容。")]),s._v(" "),a("p",[s._v("另一种方法：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{\nfor(i=1;i<=9;i++){\n  for(j=1;j<=9;j++){\n    tarr[i,j]=i*j;\n  }\n}\nfor(m in tarr){\n  split(m,tarr2,SUBSEP); print tarr2[1],"*",tarr2[2],"=",tarr[m];\n}\n}\'')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[s._v("#")]),s._v(" 内置函数")]),s._v(" "),a("p",[s._v("awk内置函数，主要分以下3种类似：算数函数、字符串函数、其它一般函数、时间函数。")]),s._v(" "),a("h3",{attrs:{id:"算术函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术函数"}},[s._v("#")]),s._v(" 算术函数")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("atan2( y, x )")]),s._v(" "),a("td",[s._v("返回 y/x 的反正切。")])]),s._v(" "),a("tr",[a("td",[s._v("cos( x )")]),s._v(" "),a("td",[s._v("返回 x 的余弦；x 是弧度。")])]),s._v(" "),a("tr",[a("td",[s._v("sin( x )")]),s._v(" "),a("td",[s._v("返回 x 的正弦；x 是弧度。")])]),s._v(" "),a("tr",[a("td",[s._v("exp( x )")]),s._v(" "),a("td",[s._v("返回 x 幂函数。")])]),s._v(" "),a("tr",[a("td",[s._v("log( x )")]),s._v(" "),a("td",[s._v("返回 x 的自然对数。")])]),s._v(" "),a("tr",[a("td",[s._v("sqrt( x )")]),s._v(" "),a("td",[s._v("返回 x 平方根。")])]),s._v(" "),a("tr",[a("td",[s._v("int( x )")]),s._v(" "),a("td",[s._v("返回 x 的截断至整数的值。")])]),s._v(" "),a("tr",[a("td",[s._v("rand( )")]),s._v(" "),a("td",[s._v("返回任意数字 n，其中 0 <= n < 1。")])]),s._v(" "),a("tr",[a("td",[s._v("srand( [expr] )")]),s._v(" "),a("td",[s._v("将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。")])])])]),s._v(" "),a("p",[s._v("举例说明：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{OFMT=\"%.3f\";fs=sin(1);fe=exp(10);fl=log(10);fi=int(3.1415);print fs,fe,fl,fi;}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.841")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22026.466")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.303")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("OFMT 设置输出数据格式是保留3位小数。")]),s._v(" "),a("p",[s._v("获得随机数：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{srand();fr=int(100*rand());print fr;}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{srand();fr=int(100*rand());print fr;}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{srand();fr=int(100*rand());print fr;}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("41")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[s._v("#")]),s._v(" 字符串函数")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("gsub( Ere, Repl, [ In ] )")]),s._v(" "),a("td",[s._v("除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。")])]),s._v(" "),a("tr",[a("td",[s._v("sub( Ere, Repl, [ In ] )")]),s._v(" "),a("td",[s._v("用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。")])]),s._v(" "),a("tr",[a("td",[s._v("index( String1, String2 )")]),s._v(" "),a("td",[s._v("在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。")])]),s._v(" "),a("tr",[a("td",[s._v("length [(String)]")]),s._v(" "),a("td",[s._v("返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。")])]),s._v(" "),a("tr",[a("td",[s._v("blength [(String)]")]),s._v(" "),a("td",[s._v("返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。")])]),s._v(" "),a("tr",[a("td",[s._v("substr( String, M, [ N ] )")]),s._v(" "),a("td",[s._v("返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。")])]),s._v(" "),a("tr",[a("td",[s._v("match( String, Ere )")]),s._v(" "),a("td",[s._v("在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。")])]),s._v(" "),a("tr",[a("td",[s._v("split( String, A, [Ere] )")]),s._v(" "),a("td",[s._v("将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。")])]),s._v(" "),a("tr",[a("td",[s._v("tolower( String )")]),s._v(" "),a("td",[s._v("返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。")])]),s._v(" "),a("tr",[a("td",[s._v("toupper( String )")]),s._v(" "),a("td",[s._v("返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。")])]),s._v(" "),a("tr",[a("td",[s._v("sprintf(Format, Expr, Expr, . . . )")]),s._v(" "),a("td",[s._v("根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。")])])])]),s._v(" "),a("p",[s._v("注：Ere都可以是正则表达式。")]),s._v(" "),a("p",[a("strong",[s._v("gsub,sub使用")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="this is a test2010test!";gsub(/[0-9]+/,"!",info);print info}\'')]),s._v("\nthis is a test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在 info中查找满足正则表达式，"),a("code",[s._v("/[0-9]+/")]),s._v(" 用"),a("code",[s._v("””")]),s._v("替换，并且替换后的值，赋值给info 未给info值，默认是"),a("code",[s._v("$0")])]),s._v(" "),a("p",[a("strong",[s._v("查找字符串（index使用）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="this is a test2010test!";print index(info,"test")?"ok":"no found";}\'')]),s._v("\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("未找到，返回0")]),s._v(" "),a("p",[a("strong",[s._v("正则表达式匹配查找(match使用）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('awk \'BEGIN{info="this is a test2010test!";print match(info,/[0-9]+/)?"ok":"no found";}\'\nok\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("截取字符串(substr使用）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("wangsl@centos5 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{info=\"this is a test2010test!\";print substr(info,4,10);}'")]),s._v("\ns is a tes\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("从第 4个 字符开始，截取10个长度字符串")]),s._v(" "),a("p",[a("strong",[s._v("字符串分割（split使用）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{info="this is a test";split(info,tA," ");print length(tA);for(k in tA){print k,tA[k];}}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" this\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" is\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("分割info，动态创建数组tA，这里比较有意思，"),a("code",[s._v("awk for …in")]),s._v("循环，是一个无序的循环。 并不是从数组下标1…n ，因此使用时候需要注意。")]),s._v(" "),a("p",[a("strong",[s._v("格式化字符串输出（sprintf使用）")])]),s._v(" "),a("p",[s._v("格式化字符串格式：")]),s._v(" "),a("p",[s._v("其中格式化字符串包括两部分内容：一部分是正常字符，这些字符将按原样输出; 另一部分是格式化规定字符，以"),a("code",[s._v('"%"')]),s._v("开始，后跟一个或几个规定字符,用来确定输出内容格式。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")]),s._v(" "),a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("%d")]),s._v(" "),a("td",[s._v("十进制有符号整数")]),s._v(" "),a("td",[s._v("%u")]),s._v(" "),a("td",[s._v("十进制无符号整数")])]),s._v(" "),a("tr",[a("td",[s._v("%f")]),s._v(" "),a("td",[s._v("浮点数")]),s._v(" "),a("td",[s._v("%s")]),s._v(" "),a("td",[s._v("字符串")])]),s._v(" "),a("tr",[a("td",[s._v("%c")]),s._v(" "),a("td",[s._v("单个字符")]),s._v(" "),a("td",[s._v("%p")]),s._v(" "),a("td",[s._v("指针的值")])]),s._v(" "),a("tr",[a("td",[s._v("%e")]),s._v(" "),a("td",[s._v("指数形式的浮点数")]),s._v(" "),a("td",[s._v("%x")]),s._v(" "),a("td",[s._v("%X 无符号以十六进制表示的整数")])]),s._v(" "),a("tr",[a("td",[s._v("%o")]),s._v(" "),a("td",[s._v("无符号以八进制表示的整数")]),s._v(" "),a("td",[s._v("%g")]),s._v(" "),a("td",[s._v("自动选择合适的表示法")])])])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{n1=124.113;n2=-1.224;n3=1.2345; printf(\"%.2f,%.2u,%.2g,%X,%on\",n1,n2,n3,n1,n1);}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("124.11")]),s._v(",18446744073709551615,1.2,7C,174\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"一般函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般函数"}},[s._v("#")]),s._v(" 一般函数")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("close( Expression )")]),s._v(" "),a("td",[s._v("用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。")])]),s._v(" "),a("tr",[a("td",[s._v("system(command )")]),s._v(" "),a("td",[s._v("执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。")])]),s._v(" "),a("tr",[a("td",[s._v("Expression "),a("code",[s._v("\\|")]),s._v(" getline [ Variable ]")]),s._v(" "),a("td",[s._v("从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。")])]),s._v(" "),a("tr",[a("td",[s._v("getline [ Variable ] < Expression")]),s._v(" "),a("td",[s._v("从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。")])]),s._v(" "),a("tr",[a("td",[s._v("getline [ Variable ]")]),s._v(" "),a("td",[s._v("将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。")])])])]),s._v(" "),a("p",[a("strong",[s._v("打开外部文件（close用法）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{while("cat /etc/passwd"|getline){print $0;};close("/etc/passwd");}\'')]),s._v("\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("逐行读取外部文件(getline使用方法）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{while(getline < "/etc/passwd"){print $0;};close("/etc/passwd");}\'')]),s._v("\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{print \"Enter your name:\";getline name;print name;}'")]),s._v("\nEnter your name:\nchengmo\nchengmo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("调用外部应用程序(system使用方法）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{b=system(\"ls -al\");print b;}'")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42092")]),s._v("\ndrwxr-xr-x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" chengmo chengmo     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" 09-30 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":47 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\ndrwxr-xr-x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("95")]),s._v(" root   root       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("-08 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":01 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("b返回值，是执行结果。")]),s._v(" "),a("h3",{attrs:{id:"时间函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间函数"}},[s._v("#")]),s._v(" 时间函数")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("函数名")]),s._v(" "),a("td",[s._v("说明")])]),s._v(" "),a("tr",[a("td",[s._v("mktime( YYYY MM dd HH MM ss[ DST])")]),s._v(" "),a("td",[s._v("生成时间格式")])]),s._v(" "),a("tr",[a("td",[s._v("strftime([format [, timestamp]])")]),s._v(" "),a("td",[s._v("格式化时间输出，将时间戳转为时间字符串具体格式，见下表。")])]),s._v(" "),a("tr",[a("td",[s._v("systime()")]),s._v(" "),a("td",[s._v("得到时间戳，返回从1970年1月1日开始到当前时间(不计闰年)的整秒数")])])])]),s._v(" "),a("p",[a("strong",[s._v("建指定时间(mktime使用）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{tstamp=mktime("2001 01 01 12 12 12");print strftime("%c",tstamp);}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),s._v("年01月01日 星期一 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("时12分12秒\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{tstamp1=mktime("2001 01 01 12 12 12");tstamp2=mktime("2001 02 01 0 0 0");print tstamp2-tstamp1;}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2634468")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("求2个时间段中间时间差，介绍了strftime使用方法")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{tstamp1=mktime(\"2001 01 01 12 12 12\");tstamp2=systime();print tstamp2-tstamp1;}'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("308201392")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("strftime日期和时间格式说明符")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("%a")]),s._v(" "),a("td",[s._v("星期几的缩写(Sun)")])]),s._v(" "),a("tr",[a("td",[s._v("%A")]),s._v(" "),a("td",[s._v("星期几的完整写法(Sunday)")])]),s._v(" "),a("tr",[a("td",[s._v("%b")]),s._v(" "),a("td",[s._v("月名的缩写(Oct)")])]),s._v(" "),a("tr",[a("td",[s._v("%B")]),s._v(" "),a("td",[s._v("月名的完整写法(October)")])]),s._v(" "),a("tr",[a("td",[s._v("%c")]),s._v(" "),a("td",[s._v("本地日期和时间")])]),s._v(" "),a("tr",[a("td",[s._v("%d")]),s._v(" "),a("td",[s._v("十进制日期")])]),s._v(" "),a("tr",[a("td",[s._v("%D")]),s._v(" "),a("td",[s._v("日期 08/20/99")])]),s._v(" "),a("tr",[a("td",[s._v("%e")]),s._v(" "),a("td",[s._v("日期，如果只有一位会补上一个空格")])]),s._v(" "),a("tr",[a("td",[s._v("%H")]),s._v(" "),a("td",[s._v("用十进制表示24小时格式的小时")])]),s._v(" "),a("tr",[a("td",[s._v("%I")]),s._v(" "),a("td",[s._v("用十进制表示12小时格式的小时")])]),s._v(" "),a("tr",[a("td",[s._v("%j")]),s._v(" "),a("td",[s._v("从1月1日起一年中的第几天")])]),s._v(" "),a("tr",[a("td",[s._v("%m")]),s._v(" "),a("td",[s._v("十进制表示的月份")])]),s._v(" "),a("tr",[a("td",[s._v("%M")]),s._v(" "),a("td",[s._v("十进制表示的分钟")])]),s._v(" "),a("tr",[a("td",[s._v("%p")]),s._v(" "),a("td",[s._v("12小时表示法(AM/PM)")])]),s._v(" "),a("tr",[a("td",[s._v("%S")]),s._v(" "),a("td",[s._v("十进制表示的秒")])]),s._v(" "),a("tr",[a("td",[s._v("%U")]),s._v(" "),a("td",[s._v("十进制表示的一年中的第几个星期(星期天作为一个星期的开始)")])]),s._v(" "),a("tr",[a("td",[s._v("%w")]),s._v(" "),a("td",[s._v("十进制表示的星期几(星期天是0)")])]),s._v(" "),a("tr",[a("td",[s._v("%W")]),s._v(" "),a("td",[s._v("十进制表示的一年中的第几个星期(星期一作为一个星期的开始)")])]),s._v(" "),a("tr",[a("td",[s._v("%x")]),s._v(" "),a("td",[s._v("重新设置本地日期(08/20/99)")])]),s._v(" "),a("tr",[a("td",[s._v("%X")]),s._v(" "),a("td",[s._v("重新设置本地时间(12:00:00)")])]),s._v(" "),a("tr",[a("td",[s._v("%y")]),s._v(" "),a("td",[s._v("两位数字表示的年(99)")])]),s._v(" "),a("tr",[a("td",[s._v("%Y")]),s._v(" "),a("td",[s._v("当前月份")])]),s._v(" "),a("tr",[a("td",[s._v("%%")]),s._v(" "),a("td",[s._v("百分号(%)")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);