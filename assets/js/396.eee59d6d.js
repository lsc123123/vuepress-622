(window.webpackJsonp=window.webpackJsonp||[]).push([[396],{725:function(a,s,t){"use strict";t.r(s);var e=t(4),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"pfctl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pfctl"}},[a._v("#")]),a._v(" pfctl")]),a._v(" "),s("p",[a._v("PF防火墙的配置命令")]),a._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),s("p",[s("strong",[a._v("pfctl命令")]),a._v(" 是PF防火墙的配置命令，PF防火墙( 全称：Packet Filter )是UNIX LIKE系统上进行TCP/ip流量过滤和网络地址转换的软件系统。PF同样也能提供TCP/IP流量的整形和控制，并且提供带宽控制和数据包优先集控制。PF最早是由Daniel Hartmeier开发的，现在的开发和维护由Daniel和openBSD小组的其他成员负责。")]),a._v(" "),s("p",[a._v("PF防火墙的功能很多，本站只列举一些基本配置。")]),a._v(" "),s("h3",{attrs:{id:"激活"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#激活"}},[a._v("#")]),a._v(" 激活")]),a._v(" "),s("p",[a._v("要激活pf并且使它在启动时调用配置文件，编辑"),s("code",[a._v("/etc/rc.conf")]),a._v("文件，修改配置pf的一行：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("pf")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("yes\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("重启操作系统让配置生效。")]),a._v(" "),s("p",[a._v("也可以通过pfctl程序启动和停止pf：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("pfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("注意这仅仅是启动和关闭PF，实际它不会载入规则集，规则集要么在系统启动时载入，要在PF启动后通过命令单独载入。")]),a._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[a._v("#")]),a._v(" 配置")]),a._v(" "),s("p",[a._v("系统引导到在rc脚本文件运行PF时PF从"),s("code",[a._v("/etc/pf.conf")]),a._v("文件载入配置规则。注意当"),s("code",[a._v("/etc/pf.conf")]),a._v("文件是默认配置文件，在系统调用rc脚本文件时，它仅仅是作为文本文件由pfctl装入并解释和插入pf的。对于一些应用来说，其他的规则集可以在系统引导后由其他文件载入。对于一些设计的非常好的unix程序，PF提供了足够的灵活性。")]),a._v(" "),s("p",[s("strong",[a._v("pf.conf文件有7个部分：")])]),a._v(" "),s("ol",[s("li",[a._v("宏：用户定义的变量，包括IP地址，接口名称等等。")]),a._v(" "),s("li",[a._v("表：一种用来保存IP地址列表的结构。")]),a._v(" "),s("li",[a._v("选项：控制PF如何工作的变量。")]),a._v(" "),s("li",[a._v("整形：重新处理数据包，进行正常化和碎片整理。")]),a._v(" "),s("li",[a._v("排队：提供带宽控制和数据包优先级控制。")]),a._v(" "),s("li",[a._v("转换：控制网络地址转换和数据包重定向。")]),a._v(" "),s("li",[a._v("过滤规则：在数据包通过接口时允许进行选择性的过滤和阻止。")])]),a._v(" "),s("p",[a._v("除去宏和表，其他的段在配置文件中也应该按照这个顺序出现，尽管对于一些特定的应用并不是所有的段都是必须的。")]),a._v(" "),s("p",[a._v("空行会被忽略，以#开头的行被认为是注释。")]),a._v(" "),s("h3",{attrs:{id:"控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制"}},[a._v("#")]),a._v(" 控制")]),a._v(" "),s("p",[a._v("引导之后，PF可以通过pfctl程序进行操作，以下是一些例子：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("pfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" /etc/pf.conf  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 载入 pf.conf 文件")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-nf")]),a._v(" /etc/pf.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解析文件，但不载入")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Nf")]),a._v(" /etc/pf.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只载入文件中的NAT规则")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Rf")]),a._v(" /etc/pf.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只载入文件中的过滤规则")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示当前的NAT规则")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示当前的过滤规则")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ss")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示当前的状态表")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-si")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示过滤状态和计数")]),a._v("\npfctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sa")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示任何可显示的")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("完整的命令列表，请参阅pfctl的man手册页。")])])}),[],!1,null,null,null);s.default=r.exports}}]);